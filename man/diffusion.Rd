% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/diffusion.R
\name{diffusion}
\alias{diffusion}
\title{diffusion}
\usage{
diffusion(x, w = NULL, cleanlead = c(TRUE, FALSE), prew = NULL, l = 2,
  cumulative = c(TRUE, FALSE), pvalreps = 0, eliminate = c(FALSE, TRUE),
  sig = 0.05, verbose = c(FALSE, TRUE), type = c("bass", "gompertz",
  "sgompertz"), optim = c("nm", "hj"), maxiter = Inf, opttol = 1e-06)
}
\arguments{
\item{x}{vector with adoption per period}

\item{w}{vector of model parameters (see note). If provided no estimation
is done.}

\item{cleanlead}{removes leading zeros for fitting purposes (default == T)}

\item{prew}{the \code{w} of the previous generation. This is used for
sequential fitting.}

\item{l}{the l-norm (1 is absolute errors, 2 is squared errors)}

\item{cumulative}{If TRUE optimisation is done on cumulative adoption.}

\item{pvalreps}{bootstrap repetitions to estimate (marginal) p-values}

\item{eliminate}{if TRUE eliminates insignificant parameters from the
estimation. Forces \code{pvalreps = 1000} if left to 0.}

\item{sig}{significance level used to eliminate parameters}

\item{verbose}{if TRUE console output is provided during estimation (default
== F)}

\item{type}{diffusion model to use. This can be "bass", "gompertz" and "sgompertz"}

\item{optim}{optimization method to use. This can be "nm" for Nelder-Meade or "hj" for Hooke-Jeeves.}

\item{maxiter}{number of iterations the optimser takes (default ==
\code{10'000} for "nm" and \code{Inf} for "hj")}

\item{opttol}{Tolerance for convergence (default == 1.e-06)}
}
\value{
returns list of:
\itemize{
\item \code{type} diffusion model type used
\item \code{call} calls function fitted
\item \code{w} named vector of fitted parameters
\item \code{x} actuals
\item \code{fit} fitted values of model
\item \code{mse} insample Mean Squared Error
\item \code{prew} the \code{w} of the previous generation
\item \code{pval} p-values for \code{w}
}
}
\description{
\code{diffusion} enables to fit various diffusion models.
}
\details{
This function fits diffusion models of the type \code{"bass"}, 
\code{"gompertz"} or \code{"sgompertz"}. Parameters are estimated by 
minimising the Mean Squared Error with a Subplex algorithm from the nloptr
package. Optionally p-values of the coefficients can be determined via
bootstraping. Furthermore, the bootstrapping allows to remove insignificant
parameters from the optimisation process.
}
\note{
vector \code{w} needs to be provided for the Bass model in the order of
  \code{"p", "q", "m"}, where "p" is the coefficient of innovation, "q" is the
  coeficient of imitation and "m" is the market size coefficient.
  
  For the Gompertz model vector \code{w} needs to be in the form of
  \code{("a", "b", "m")}. Where "a" is the x-axis displacement coefficient, "b"
  determines the growth rate and "m" sets, similarly to Bass model, the
  market potential (saturation point).
  
  For the Shifted-Gompertz model vector \code{w} needs to be in the form of 
  \code{("a", "b", "c", "m")}. Where "a" is the x-axis displacement
  coefficient, "b" determines the growth rate, "c" is the shifting parameter
  and "m" sets, similarly to Bass model, the market potential (saturation
  point).
}
\section{Bass model}{

The optimisation of the Bass model is initialisated by the linear
aproximation suggested in Bass (1969).
}

\section{Gompertz model}{

The initialisation of the Gompertz model uses the approach suggested by Jukic
et al. (2004) but is adopted to allow for the non-exponential version of
Gompertz curve. This allows that m becomes Bass model equivalent. Hence for
the market potential the Bass model is used as an initialisation.
}

\section{Shifted-Gompertz model}{

The model is initialised by assuming the shift operator to be 1. At this 
point the model becomes Bass equivalent as shown in Bemmaor (1994). A Bass
model is therefore used as an estimator for the remaining parameters.
}

\examples{
# example for diffusion() function
data("chicken")
fitbass <- diffusion(chicken[, 2], type = "bass")
fitgomp <- diffusion(chicken[, 2], type = "gompertz")
fitsgomp <- diffusion(chicken[, 2], type = "sgompertz")

# Produce some plots
plot(fitbass)
plot(fitgomp)
plot(fitsgomp)
}
\references{
Bass, F.M., 1969. A new product growth for model consumer
  durables. Management Science 15(5), 215-227.

Bemmaor, A. 1994. Modeling the Diffusion of New Durable Goods:
  Word-of-Mouth Effect versus Consumer Heterogeneity. In G. Laurent, G.L.
  Lilien and B. Pras (Eds.). Research Traditions in Marketing. Boston:
  Kluwer, pp. 201-223.

Jukic, D., Kralik, G. and Scitovski, R., 2004. Least-squares
  fitting Gompertz curve. Journal of Computational and Applied Mathematics,
  169, 359-375.
}
\seealso{
\code{\link{seqdiffusion}} for sequential diffusion model fitting
  across product generations.
}
\author{
Oliver Schaer, \email{info@oliverschaer.ch},

Nikoloas Kourentzes, \email{nikoloas@kourentzes.com}
}
